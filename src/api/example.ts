/* eslint-disable */
// @ts-nocheck

/**
 * generated by free-swagger-core
 * @see https://www.npmjs.com/package/free-swagger
 * @title Crm2所有接口
 * @description 所有api
 * @fileDescription 测试控制器
 * @version v1
}
**/

import {
  WeatherForecast_In,
  WeatherForecast_Out,
  WeatherForecast_OutApiTableOut,
  Stream,
  LoginByPwd_In,
  AddOrganization_In,
  UpdateOrganization_In,
  BM_AddGtisUser,
  BM_AddGtisUserRetModel
} from "./interface/index.ts";
import axios from "axios";

/** 测试方法 */
export const testPostByPost = (params: WeatherForecast_In) =>
  axios.request<WeatherForecast_Out[]>({
    url: `/api/Example/TestPost`,
    method: "post",
    params: {},
    data: params
  });

/** 测试方法2 */
export const testPost2ByPost = (params: WeatherForecast_In) =>
  axios.request<WeatherForecast_OutApiTableOut>({
    url: `/api/Example/TestPost2`,
    method: "post",
    params: {},
    data: params
  });

/** 测试登录,返回token */
export const loginByPost = () =>
  axios.request<string>({
    url: `/api/Example/Login`,
    method: "post",
    params: {},
    data: {}
  });

/** 测试下载 */
export const downLoadTestByPost = () =>
  axios.request<Stream>({
    url: `/api/Example/DownLoadTest`,
    method: "post",
    params: {},
    data: {}
  });

/** 测试上传 */
export const uploadFileTestByPost = (params: FormData) =>
  axios.request<any>({
    url: `/api/Example/UploadFileTest`,
    method: "post",
    params: {},
    data: params
  });

/** 获取请求和输出的ts模型 */
export const getControllerMethodTsByGet = (params: { url?: string }) =>
  axios.request<Stream>({
    url: `/api/Example/GetControllerMethodTs`,
    method: "get",
    params: params,
    data: {}
  });

/** 获取GUID */
export const getGuidByPost = (params: { number?: number }) =>
  axios.request<string[]>({
    url: `/api/Example/GetGuid`,
    method: "post",
    params: params,
    data: {}
  });

export const getDictionaryTreeByPost = () =>
  axios.request<any>({
    url: `/api/Example/GetDictionaryTree`,
    method: "post",
    params: {},
    data: {}
  });

export const loginAesTestByPost = (params: LoginByPwd_In) =>
  axios.request<string[]>({
    url: `/api/Example/LoginAESTest`,
    method: "post",
    params: {},
    data: params
  });

export const addOrgestByPost = (params: AddOrganization_In) =>
  axios.request<string[]>({
    url: `/api/Example/AddOrgest`,
    method: "post",
    params: {},
    data: params
  });

export const updateOrgestByPost = (params: UpdateOrganization_In) =>
  axios.request<string[]>({
    url: `/api/Example/UpdateOrgest`,
    method: "post",
    params: {},
    data: params
  });

export const globalSearchApiTestByPost = () =>
  axios.request<any>({
    url: `/api/Example/GlobalSearchAPITest`,
    method: "post",
    params: {},
    data: {}
  });

export const mailTestByPost = (params: FormData) =>
  axios.request<any>({
    url: `/api/Example/MailTest`,
    method: "post",
    params: {},
    data: params
  });

export const mailReadTestByPost = () =>
  axios.request<any>({
    url: `/api/Example/MailReadTest`,
    method: "post",
    params: {},
    data: {}
  });

export const formRoleTestByPost = (params: { formId?: string }) =>
  axios.request<any>({
    url: `/api/Example/FormRoleTest`,
    method: "post",
    params: params,
    data: {}
  });

export const checkGitByPost = () =>
  axios.request<any>({
    url: `/api/Example/CheckGit`,
    method: "post",
    params: {},
    data: {}
  });

/** 添加用户 */
export const addUserByPost = (params: BM_AddGtisUser) =>
  axios.request<BM_AddGtisUserRetModel[]>({
    url: `/api/Example/AddUser`,
    method: "post",
    params: {},
    data: params
  });

export const testGroupByByPost = () =>
  axios.request<any>({
    url: `/api/Example/TestGroupBy`,
    method: "post",
    params: {},
    data: {}
  });

/** 生成当前controller所有TypeScript模型 */
export const generateThisControllerModelToTsByPut = () =>
  axios.request<Stream>({
    url: `/api/Example/GenerateThisControllerModelToTs`,
    method: "put",
    params: {},
    data: {}
  });
