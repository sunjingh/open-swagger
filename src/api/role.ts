/* eslint-disable */
// @ts-nocheck

/**
 * generated by free-swagger-core
 * @see https://www.npmjs.com/package/free-swagger
 * @title Crm2所有接口
 * @description 所有api
 * @version v1
}
**/

import {
  AddRole_In,
  UpdateRole_In,
  UpdateRoleStatusIn,
  GetRoleById_Out,
  GetRoleBindingUsers_In,
  GetRoleBindingUsers_OutApiTableOut,
  SearchRoleList_In,
  SearchRoleList_OutApiTableOut,
  Db_sys_role,
  GetFormList_Out,
  GetFormByUserId_Out,
  GetFormByUserIdAndParentId_In,
  GetFormByUserIdAndParentId_Out,
  Stream
} from "./interface/index.ts";
import axios from "axios";

/** 添加角色信息 */
export const addRoleByPost = (params: AddRole_In) =>
  axios.request<any>({
    url: `/api/Role/AddRole`,
    method: "post",
    params: {},
    data: params
  });

/** 修改角色信息 */
export const updateRoleByPost = (params: UpdateRole_In) =>
  axios.request<any>({
    url: `/api/Role/UpdateRole`,
    method: "post",
    params: {},
    data: params
  });

/** 删除角色信息 */
export const deleteRoleByPost = (params: { Ids?: string }) =>
  axios.request<any>({
    url: `/api/Role/DeleteRole`,
    method: "post",
    params: params,
    data: {}
  });

/** 修改角色状态信息 */
export const updateRoleStatusByPost = (params: UpdateRoleStatusIn) =>
  axios.request<any>({
    url: `/api/Role/UpdateRoleStatus`,
    method: "post",
    params: {},
    data: params
  });

/** 根据角色Id获取角色信息 */
export const getRoleByIdByPost = (params: { Id?: string }) =>
  axios.request<GetRoleById_Out>({
    url: `/api/Role/GetRoleById`,
    method: "post",
    params: params,
    data: {}
  });

/** 根据角色获取绑定人员列表--分页 */
export const getRoleBindingUsersByPost = (params: GetRoleBindingUsers_In) =>
  axios.request<GetRoleBindingUsers_OutApiTableOut>({
    url: `/api/Role/GetRoleBindingUsers`,
    method: "post",
    params: {},
    data: params
  });

/** 根据查询条件获取角色信息列表 */
export const searchRoleListByPost = (params: SearchRoleList_In) =>
  axios.request<SearchRoleList_OutApiTableOut>({
    url: `/api/Role/SearchRoleList`,
    method: "post",
    params: {},
    data: params
  });

/** 获取当前所有可用角色 */
export const getRoleListByPost = () =>
  axios.request<Db_sys_role[]>({
    url: `/api/Role/GetRoleList`,
    method: "post",
    params: {},
    data: {}
  });

/** 返回当前系统功能信息，只返回类型为菜单(模块、表单)、列表、列、按钮的数据。 */
export const getFormListByPost = () =>
  axios.request<GetFormList_Out[]>({
    url: `/api/Role/GetFormList`,
    method: "post",
    params: {},
    data: {}
  });

/** 根据用户Id获取用户拥有的功能信息，只返回类型为菜单(模块、表单)、列表、列、按钮的数据,全部获取然后前台判断。 */
export const getFormByUserIdByPost = (params: { UserId?: string }) =>
  axios.request<GetFormByUserId_Out[]>({
    url: `/api/Role/GetFormByUserId`,
    method: "post",
    params: params,
    data: {}
  });

/** 根据用户Id和父级节点和类型获取用户拥有的功能信息，只返回类型为菜单(模块、表单)、列表、列、按钮的数据，前台一页一判断和GetFormByUserId类似。 */
export const getFormByUserIdAndParentIdByPost = (params: GetFormByUserIdAndParentId_In) =>
  axios.request<GetFormByUserIdAndParentId_Out[]>({
    url: `/api/Role/GetFormByUserIdAndParentId`,
    method: "post",
    params: {},
    data: params
  });

/** 生成当前controller所有TypeScript模型 */
export const generateThisControllerModelToTsByPut = () =>
  axios.request<Stream>({
    url: `/api/Role/GenerateThisControllerModelToTs`,
    method: "put",
    params: {},
    data: {}
  });
