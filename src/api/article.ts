/* eslint-disable */
// @ts-nocheck

/**
 * generated by free-swagger-core
 * @see https://www.npmjs.com/package/free-swagger
 * @title Crm2所有接口
 * @description 所有api
 * @fileDescription 知识库控制器
 * @version v1
}
**/

import {
  SearchArticleList_In,
  SearchArticleList_OutApiTableOut,
  GetArticleById_In,
  GetArticleById_Out,
  AddArticle_Out,
  UpdateArticle_Out,
  DeleteArticle_In,
  DeleteArticle_Out,
  RevokeArticle_In,
  RevokeArticle_Out,
  GetArticleListByUserId_In,
  GetArticleListByUserId_OutApiTableOut,
  GetUserPromotionListByUserId_In,
  GetUserPromotionListByUserId_Out,
  ApiDictionary,
  AddArticleComment_Out,
  UpdateArticleComment_Out,
  DeleteArticleComment_In,
  DeleteArticleComment_Out,
  GetArticleCommentList_In,
  GetArticleCommentList_Out,
  AddArticleCommentPraise_In,
  AddArticleCommentPraise_Out,
  DeleteArticleCommentPraise_In,
  DeleteArticleCommentPraise_Out,
  AddArticlePraise_In,
  AddArticlePraise_Out,
  DeleteArticlePraise_In,
  DeleteArticlePraise_Out,
  AddArticleBrowse_In,
  AddArticleBrowse_Out,
  GetBrowseRecordByArticleId_In,
  GetBrowseRecordByArticleId_Out,
  Stream
} from "./interface/index.ts";
import axios from "axios";

/** 根据查询条件获取文章列表。 */
export const searchArticleListByPost = (params: SearchArticleList_In) =>
  axios.request<SearchArticleList_OutApiTableOut>({
    url: `/api/Article/SearchArticleList`,
    method: "post",
    params: {},
    data: params
  });

/** 根据文章Id获取文章信息。 */
export const getArticleByIdByPost = (params: GetArticleById_In) =>
  axios.request<GetArticleById_Out>({
    url: `/api/Article/GetArticleById`,
    method: "post",
    params: {},
    data: params
  });

/** 添加文章信息 */
export const addArticleByPost = (params: FormData) =>
  axios.request<AddArticle_Out>({
    url: `/api/Article/AddArticle`,
    method: "post",
    params: {},
    data: params
  });

/** 修改文章信息 */
export const updateArticleByPost = (params: FormData) =>
  axios.request<UpdateArticle_Out>({
    url: `/api/Article/UpdateArticle`,
    method: "post",
    params: {},
    data: params
  });

/** 删除文章信息 */
export const deleteArticleByPost = (params: DeleteArticle_In) =>
  axios.request<DeleteArticle_Out>({
    url: `/api/Article/DeleteArticle`,
    method: "post",
    params: {},
    data: params
  });

/** 下架文章信息 */
export const revokeArticleByPost = (params: RevokeArticle_In) =>
  axios.request<RevokeArticle_Out>({
    url: `/api/Article/RevokeArticle`,
    method: "post",
    params: {},
    data: params
  });

/** 根据用户id查询该用户发布的知识库文章列表 */
export const getArticleListByUserIdByPost = (params: GetArticleListByUserId_In) =>
  axios.request<GetArticleListByUserId_OutApiTableOut>({
    url: `/api/Article/GetArticleListByUserId`,
    method: "post",
    params: {},
    data: params
  });

/** 根据用户Id获取用户的晋升历史记录 */
export const getUserPromotionListByUserIdByPost = (params: GetUserPromotionListByUserId_In) =>
  axios.request<GetUserPromotionListByUserId_Out[]>({
    url: `/api/Article/GetUserPromotionListByUserId`,
    method: "post",
    params: {},
    data: params
  });

/** 获取文件[方案1] */
export const downLoadByGet = (params: { attId?: string }) =>
  axios.request<any>({
    url: `/api/Article/DownLoad`,
    method: "get",
    params: params,
    data: {}
  });

/** 富文本上传图片[方案1] */
export const uploadImageByPost = (params: FormData) =>
  axios.request<any>({
    url: `/api/Article/UploadImage`,
    method: "post",
    params: {},
    data: params
  });

/** 获取文件【方案2】 */
export const downLoadNewByGet = (params: { attId?: string; articleId?: string }) =>
  axios.request<any>({
    url: `/api/Article/DownLoadNew`,
    method: "get",
    params: params,
    data: {}
  });

/** 富文本上传图片[方案2] */
export const uploadImageNewByPost = (params: FormData) =>
  axios.request<any>({
    url: `/api/Article/UploadImageNew`,
    method: "post",
    params: {},
    data: params
  });

/** 富文本心跳数据保持 */
export const articleTextHeartbeatByGet = (params: { articleId?: string }) =>
  axios.request<any>({
    url: `/api/Article/ArticleTextHeartbeat`,
    method: "get",
    params: params,
    data: {}
  });

/** 获取拥有知识库文章的用户列表 */
export const getHaveArticleUserListByPost = () =>
  axios.request<ApiDictionary[]>({
    url: `/api/Article/GetHaveArticleUserList`,
    method: "post",
    params: {},
    data: {}
  });

/** 添加文章评论信息 */
export const addArticleCommentByPost = (params: FormData) =>
  axios.request<AddArticleComment_Out>({
    url: `/api/Article/AddArticleComment`,
    method: "post",
    params: {},
    data: params
  });

/** 修改文章评论信息 */
export const updateArticleCommentByPost = (params: FormData) =>
  axios.request<UpdateArticleComment_Out>({
    url: `/api/Article/UpdateArticleComment`,
    method: "post",
    params: {},
    data: params
  });

/** 删除文章评论信息 */
export const deleteArticleCommentByPost = (params: DeleteArticleComment_In) =>
  axios.request<DeleteArticleComment_Out>({
    url: `/api/Article/DeleteArticleComment`,
    method: "post",
    params: {},
    data: params
  });

/** 根据文章Id获取文章评论信息 */
export const getArticleCommentListByPost = (params: GetArticleCommentList_In) =>
  axios.request<GetArticleCommentList_Out[]>({
    url: `/api/Article/GetArticleCommentList`,
    method: "post",
    params: {},
    data: params
  });

/** 添加文章评论点赞信息 */
export const addArticleCommentPraiseByPost = (params: AddArticleCommentPraise_In) =>
  axios.request<AddArticleCommentPraise_Out>({
    url: `/api/Article/AddArticleCommentPraise`,
    method: "post",
    params: {},
    data: params
  });

/** 撤销文章评论点赞信息。 */
export const deleteArticleCommentPraiseByPost = (params: DeleteArticleCommentPraise_In) =>
  axios.request<DeleteArticleCommentPraise_Out>({
    url: `/api/Article/DeleteArticleCommentPraise`,
    method: "post",
    params: {},
    data: params
  });

/** 添加文章点赞信息 */
export const addArticlePraiseByPost = (params: AddArticlePraise_In) =>
  axios.request<AddArticlePraise_Out>({
    url: `/api/Article/AddArticlePraise`,
    method: "post",
    params: {},
    data: params
  });

/** 撤销文章点赞信息 */
export const deleteArticlePraiseByPost = (params: DeleteArticlePraise_In) =>
  axios.request<DeleteArticlePraise_Out>({
    url: `/api/Article/DeleteArticlePraise`,
    method: "post",
    params: {},
    data: params
  });

/** 添加文章浏览信息。 */
export const addArticleBrowseByPost = (params: AddArticleBrowse_In) =>
  axios.request<AddArticleBrowse_Out>({
    url: `/api/Article/AddArticleBrowse`,
    method: "post",
    params: {},
    data: params
  });

/** 根据知识库id获取对应的浏览记录列表 */
export const getBrowseRecordByArticleIdByPost = (params: GetBrowseRecordByArticleId_In) =>
  axios.request<GetBrowseRecordByArticleId_Out[]>({
    url: `/api/Article/GetBrowseRecordByArticleId`,
    method: "post",
    params: {},
    data: params
  });

/** 生成当前controller所有TypeScript模型 */
export const generateThisControllerModelToTsByPut = () =>
  axios.request<Stream>({
    url: `/api/Article/GenerateThisControllerModelToTs`,
    method: "put",
    params: {},
    data: {}
  });
