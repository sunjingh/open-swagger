/* eslint-disable */
// @ts-nocheck

/**
 * generated by free-swagger-core
 * @see https://www.npmjs.com/package/free-swagger
 * @title Crm2所有接口
 * @description 所有api
 * @version v1
}
**/

import {
  AddUser_In,
  UpdateUser_In,
  UpdateUserStatus_In,
  GetUserById_Out,
  SearchUserList_In,
  SearchUserList_OutApiTableOut,
  BatchUpdateUserMaxSaveCustomer_In,
  BindUserWeChat_In,
  GetUserByRoleId_In,
  GetUserByRoleId_OutApiTableOut,
  GetUserByOrgId_In,
  GetUserByOrgId_OutApiTableOut,
  UpdateUserLoginOption_In,
  H5SearchUserList_In,
  H5SearchUserList_OutApiTableOut,
  GetLoginUserInfo_Out,
  GetSameOrgUserInfoByToken_Out,
  Stream
} from "./interface/index.ts";
import axios from "axios";

/** 添加员工信息 */
export const addUserByPost = (params: AddUser_In) =>
  axios.request<any>({
    url: `/api/User/AddUser`,
    method: "post",
    params: {},
    data: params
  });

/** 生成员工账号 */
export const createUserNameByPost = () =>
  axios.request<string>({
    url: `/api/User/CreateUserName`,
    method: "post",
    params: {},
    data: {}
  });

/** 生成密码 */
export const createUserPasswordByPost = () =>
  axios.request<string>({
    url: `/api/User/CreateUserPassword`,
    method: "post",
    params: {},
    data: {}
  });

/** 修改员工信息 */
export const updateUserByPost = (params: UpdateUser_In) =>
  axios.request<any>({
    url: `/api/User/UpdateUser`,
    method: "post",
    params: {},
    data: params
  });

/** 删除用户信息 */
export const deleteUserByPost = (params: { Ids?: string }) =>
  axios.request<any>({
    url: `/api/User/DeleteUser`,
    method: "post",
    params: params,
    data: {}
  });

/** 修改用户状态信息 */
export const updateUserStatusByPost = (params: UpdateUserStatus_In) =>
  axios.request<any>({
    url: `/api/User/UpdateUserStatus`,
    method: "post",
    params: {},
    data: params
  });

/** 根据用户Id获取用户信息 */
export const getUserByIdByPost = (params: { Id?: string }) =>
  axios.request<GetUserById_Out>({
    url: `/api/User/GetUserById`,
    method: "post",
    params: params,
    data: {}
  });

/** 根据查询条件获取用户信息列表 */
export const searchUserListByPost = (params: SearchUserList_In) =>
  axios.request<SearchUserList_OutApiTableOut>({
    url: `/api/User/SearchUserList`,
    method: "post",
    params: {},
    data: params
  });

/** 批量修改用户最大可保存客户数 */
export const batchUpdateUserMaxSaveCustomerByPost = (params: BatchUpdateUserMaxSaveCustomer_In[]) =>
  axios.request<any>({
    url: `/api/User/BatchUpdateUserMaxSaveCustomer`,
    method: "post",
    params: {},
    data: params
  });

/** 重置用户密码 */
export const resetUserPasswordByPost = (params: { Id?: string }) =>
  axios.request<any>({
    url: `/api/User/ResetUserPassword`,
    method: "post",
    params: params,
    data: {}
  });

/** 绑定用户微信 */
export const bindUserWeChatByPost = (params: BindUserWeChat_In) =>
  axios.request<any>({
    url: `/api/User/BindUserWeChat`,
    method: "post",
    params: {},
    data: params
  });

/** 解绑用户微信 */
export const unBindUserWeChatByPost = (params: { Id?: string }) =>
  axios.request<any>({
    url: `/api/User/UnBindUserWeChat`,
    method: "post",
    params: params,
    data: {}
  });

/** 根据角色Id获取用户信息 */
export const getUserByRoleIdByPost = (params: GetUserByRoleId_In) =>
  axios.request<GetUserByRoleId_OutApiTableOut>({
    url: `/api/User/GetUserByRoleId`,
    method: "post",
    params: {},
    data: params
  });

/** 根据组织Id获取用户信息 */
export const getUserByOrgIdByPost = (params: GetUserByOrgId_In) =>
  axios.request<GetUserByOrgId_OutApiTableOut>({
    url: `/api/User/GetUserByOrgId`,
    method: "post",
    params: {},
    data: params
  });

/** 修改用户登录设置，设置5种登录方式的启用和禁用状态。 */
export const updateUserLoginOptionByPost = (params: UpdateUserLoginOption_In) =>
  axios.request<any>({
    url: `/api/User/UpdateUserLoginOption`,
    method: "post",
    params: {},
    data: params
  });

/** 根据用户token获取用户姓名 */
export const getUserNameByUserTokenByPost = () =>
  axios.request<string>({
    url: `/api/User/GetUserNameByUserToken`,
    method: "post",
    params: {},
    data: {}
  });

/** H5端 根据条件查询用户列表 */
export const h5SearchUserListByPost = (params: H5SearchUserList_In) =>
  axios.request<H5SearchUserList_OutApiTableOut>({
    url: `/api/User/H5SearchUserList`,
    method: "post",
    params: {},
    data: params
  });

/** 获取登录用户的用户信息 */
export const getLoginUserInfoByPost = () =>
  axios.request<GetLoginUserInfo_Out>({
    url: `/api/User/GetLoginUserInfo`,
    method: "post",
    params: {},
    data: {}
  });

/** 根据用户token获取同组织人员信息 */
export const getSameOrgUserInfoByTokenByPost = () =>
  axios.request<GetSameOrgUserInfoByToken_Out[]>({
    url: `/api/User/GetSameOrgUserInfoByToken`,
    method: "post",
    params: {},
    data: {}
  });

/** 生成当前controller所有TypeScript模型 */
export const generateThisControllerModelToTsByPut = () =>
  axios.request<Stream>({
    url: `/api/User/GenerateThisControllerModelToTs`,
    method: "put",
    params: {},
    data: {}
  });
