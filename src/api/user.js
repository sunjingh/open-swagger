/* eslint-disable */
// @ts-nocheck

/**
 * generated by free-swagger-core
 * @see https://www.npmjs.com/package/free-swagger
 * @title Crm2所有接口
 * @description 所有api
 * @version v1
}
**/

import axios from "axios";

/**
 * @description 添加员工信息
 * @param {AddUser_In} params
 **/
export const addUserByPost = (params) =>
  axios.request({
    url: `/api/User/AddUser`,
    method: "post",
    params: {},
    data: params
  });

/**
 * @description 生成员工账号
 **/
export const createUserNameByPost = () =>
  axios.request({
    url: `/api/User/CreateUserName`,
    method: "post",
    params: {},
    data: {}
  });

/**
 * @description 生成密码
 **/
export const createUserPasswordByPost = () =>
  axios.request({
    url: `/api/User/CreateUserPassword`,
    method: "post",
    params: {},
    data: {}
  });

/**
 * @description 修改员工信息
 * @param {UpdateUser_In} params
 **/
export const updateUserByPost = (params) =>
  axios.request({
    url: `/api/User/UpdateUser`,
    method: "post",
    params: {},
    data: params
  });

/**
 * @description 删除用户信息
 * @param {Object} params
 * @param {string} params.Ids
 **/
export const deleteUserByPost = (params) =>
  axios.request({
    url: `/api/User/DeleteUser`,
    method: "post",
    params: params,
    data: {}
  });

/**
 * @description 修改用户状态信息
 * @param {UpdateUserStatus_In} params
 **/
export const updateUserStatusByPost = (params) =>
  axios.request({
    url: `/api/User/UpdateUserStatus`,
    method: "post",
    params: {},
    data: params
  });

/**
 * @description 根据用户Id获取用户信息
 * @param {Object} params
 * @param {string} params.Id
 **/
export const getUserByIdByPost = (params) =>
  axios.request({
    url: `/api/User/GetUserById`,
    method: "post",
    params: params,
    data: {}
  });

/**
 * @description 根据查询条件获取用户信息列表
 * @param {SearchUserList_In} params
 **/
export const searchUserListByPost = (params) =>
  axios.request({
    url: `/api/User/SearchUserList`,
    method: "post",
    params: {},
    data: params
  });

/**
 * @description 批量修改用户最大可保存客户数
 * @param {BatchUpdateUserMaxSaveCustomer_In[]} params
 **/
export const batchUpdateUserMaxSaveCustomerByPost = (params) =>
  axios.request({
    url: `/api/User/BatchUpdateUserMaxSaveCustomer`,
    method: "post",
    params: {},
    data: params
  });

/**
 * @description 重置用户密码
 * @param {Object} params
 * @param {string} params.Id
 **/
export const resetUserPasswordByPost = (params) =>
  axios.request({
    url: `/api/User/ResetUserPassword`,
    method: "post",
    params: params,
    data: {}
  });

/**
 * @description 绑定用户微信
 * @param {BindUserWeChat_In} params
 **/
export const bindUserWeChatByPost = (params) =>
  axios.request({
    url: `/api/User/BindUserWeChat`,
    method: "post",
    params: {},
    data: params
  });

/**
 * @description 解绑用户微信
 * @param {Object} params
 * @param {string} params.Id
 **/
export const unBindUserWeChatByPost = (params) =>
  axios.request({
    url: `/api/User/UnBindUserWeChat`,
    method: "post",
    params: params,
    data: {}
  });

/**
 * @description 根据角色Id获取用户信息
 * @param {GetUserByRoleId_In} params
 **/
export const getUserByRoleIdByPost = (params) =>
  axios.request({
    url: `/api/User/GetUserByRoleId`,
    method: "post",
    params: {},
    data: params
  });

/**
 * @description 根据组织Id获取用户信息
 * @param {GetUserByOrgId_In} params
 **/
export const getUserByOrgIdByPost = (params) =>
  axios.request({
    url: `/api/User/GetUserByOrgId`,
    method: "post",
    params: {},
    data: params
  });

/**
 * @description 修改用户登录设置，设置5种登录方式的启用和禁用状态。
 * @param {UpdateUserLoginOption_In} params
 **/
export const updateUserLoginOptionByPost = (params) =>
  axios.request({
    url: `/api/User/UpdateUserLoginOption`,
    method: "post",
    params: {},
    data: params
  });

/**
 * @description 根据用户token获取用户姓名
 **/
export const getUserNameByUserTokenByPost = () =>
  axios.request({
    url: `/api/User/GetUserNameByUserToken`,
    method: "post",
    params: {},
    data: {}
  });

/**
 * @description H5端 根据条件查询用户列表
 * @param {H5SearchUserList_In} params
 **/
export const h5SearchUserListByPost = (params) =>
  axios.request({
    url: `/api/User/H5SearchUserList`,
    method: "post",
    params: {},
    data: params
  });

/**
 * @description 获取登录用户的用户信息
 **/
export const getLoginUserInfoByPost = () =>
  axios.request({
    url: `/api/User/GetLoginUserInfo`,
    method: "post",
    params: {},
    data: {}
  });

/**
 * @description 根据用户token获取同组织人员信息
 **/
export const getSameOrgUserInfoByTokenByPost = () =>
  axios.request({
    url: `/api/User/GetSameOrgUserInfoByToken`,
    method: "post",
    params: {},
    data: {}
  });

/**
 * @description 生成当前controller所有TypeScript模型
 **/
export const generateThisControllerModelToTsByPut = () =>
  axios.request({
    url: `/api/User/GenerateThisControllerModelToTs`,
    method: "put",
    params: {},
    data: {}
  });
