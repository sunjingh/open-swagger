/* eslint-disable */
// @ts-nocheck

/**
 * generated by free-swagger-core
 * @see https://www.npmjs.com/package/free-swagger
 * @title Crm2所有接口
 * @description 所有api
 * @fileDescription 跟踪记录控制器
 * @version v1
}
**/

import axios from "axios";

/**
 * @description 根据查询条件获取跟踪记录信息列表
 * @param {SearchTrackingRecordList_In} params
 **/
export const searchTrackingRecordListByPost = (params) =>
  axios.request({
    url: `/api/TrackingRecord/SearchTrackingRecordList`,
    method: "post",
    params: {},
    data: params
  });

/**
 * @description 根据跟踪Id获取跟踪记录信息。
 * @param {GetTrackingRecordById_In} params
 **/
export const getTrackingRecordByIdByPost = (params) =>
  axios.request({
    url: `/api/TrackingRecord/GetTrackingRecordById`,
    method: "post",
    params: {},
    data: params
  });

/**
 * @deprecated
 * @description 根据客户表主键Id获取跟踪记录信息。
 * @param {GetTrackingRecordByCustomerId_In} params
 **/
export const getTrackingRecordByCustomerIdByPost = (params) =>
  axios.request({
    url: `/api/TrackingRecord/GetTrackingRecordByCustomerId`,
    method: "post",
    params: {},
    data: params
  });

/**
 * @deprecated
 * @description 根据客户表主键Id获取客户追踪记录数量。
 * @param {GetTrackingRecordNumberByCustomerId_In} params
 **/
export const getTrackingRecordNumberByCustomerIdByPost = (params) =>
  axios.request({
    url: `/api/TrackingRecord/GetTrackingRecordNumberByCustomerId`,
    method: "post",
    params: {},
    data: params
  });

/**
 * @description 根据追踪记录表主键Id设置追踪记录为已读。
 * @param {SetTrackingRecordReadById_In} params
 **/
export const setTrackingRecordReadByIdByPost = (params) =>
  axios.request({
    url: `/api/TrackingRecord/SetTrackingRecordReadById`,
    method: "post",
    params: {},
    data: params
  });

/**
 * @description 添加跟踪记录信息
 * @param {FormData} params
 **/
export const addTrackingRecordByPost = (params) =>
  axios.request({
    url: `/api/TrackingRecord/AddTrackingRecord`,
    method: "post",
    params: {},
    data: params
  });

/**
 * @description 修改跟踪记录信息，验证是否本人创建的跟踪记录。
 * @param {FormData} params
 **/
export const updateTrackingRecordByPost = (params) =>
  axios.request({
    url: `/api/TrackingRecord/UpdateTrackingRecord`,
    method: "post",
    params: {},
    data: params
  });

/**
 * @description 删除跟踪记录信息，验证是否本人创建的跟踪记录，多条记录全部执行成功则返回成功，否则返回失败。只做逻辑删除，修改Deleted字段为1。
 * @param {DeleteTrackingRecord_In} params
 **/
export const deleteTrackingRecordByPost = (params) =>
  axios.request({
    url: `/api/TrackingRecord/DeleteTrackingRecord`,
    method: "post",
    params: {},
    data: params
  });

/**
 * @description 根据查询条件获取跟踪记录汇总信息列表
 * @param {SummaryTrackingRecordList_In} params
 **/
export const summaryTrackingRecordListByPost = (params) =>
  axios.request({
    url: `/api/TrackingRecord/SummaryTrackingRecordList`,
    method: "post",
    params: {},
    data: params
  });

/**
 * @description 根据员工（用户）表主键Id获取跟踪记录信息
 * @param {GetTrackingRecordByUserId_In} params
 **/
export const getTrackingRecordByUserIdByPost = (params) =>
  axios.request({
    url: `/api/TrackingRecord/GetTrackingRecordByUserId`,
    method: "post",
    params: {},
    data: params
  });

/**
 * @description 根据查询条件查询合同列表
 * @param {TrackingRecord_SearchContractInfoIn} params
 **/
export const searchContractInfoByPost = (params) =>
  axios.request({
    url: `/api/TrackingRecord/SearchContractInfo`,
    method: "post",
    params: {},
    data: params
  });

/**
 * @description 生成当前controller所有TypeScript模型
 **/
export const generateThisControllerModelToTsByPut = () =>
  axios.request({
    url: `/api/TrackingRecord/GenerateThisControllerModelToTs`,
    method: "put",
    params: {},
    data: {}
  });
