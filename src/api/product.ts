/* eslint-disable */
// @ts-nocheck

/**
 * generated by free-swagger-core
 * @see https://www.npmjs.com/package/free-swagger
 * @title Crm2所有接口
 * @description 所有api
 * @version v1
}
**/

import {
  SearchProductList_In,
  SearchProductList_OutApiTableOut,
  ProductParameter_In,
  GetProductById_Out,
  GetProductList_In,
  GetProductList_OutApiTableOut,
  AddProduct_In,
  UpdateProduct_In,
  GetProductChargingParameters_Out,
  GetProductNameListNoCondition,
  Stream
} from "./interface/index.ts";
import axios from "axios";

/** 根据查询条件获取产品列表。 */
export const searchProductListByPost = (params: SearchProductList_In) =>
  axios.request<SearchProductList_OutApiTableOut>({
    url: `/api/Product/SearchProductList`,
    method: "post",
    params: {},
    data: params
  });

/** 根据产品Id获取产品信息。 */
export const getProductByIdByPost = (params: ProductParameter_In) =>
  axios.request<GetProductById_Out>({
    url: `/api/Product/GetProductById`,
    method: "post",
    params: {},
    data: params
  });

/** 根据查询条件获取产品信息，状态为启用的产品信息。 */
export const getProductListByPost = (params: GetProductList_In) =>
  axios.request<GetProductList_OutApiTableOut>({
    url: `/api/Product/GetProductList`,
    method: "post",
    params: {},
    data: params
  });

/** 修改产品状态信息，变更产品状态为启用、停用，多条记录全部执行成功则返回成功，否则返回失败 */
export const updateProductStateByPost = (params: ProductParameter_In) =>
  axios.request<any>({
    url: `/api/Product/UpdateProductState`,
    method: "post",
    params: {},
    data: params
  });

/** 删除产品信息，当产品状态为停用、草稿时，可删除。验证数据权限。只做逻辑删除，修改Deleted字段为1。 */
export const deleteProductByPost = (params: ProductParameter_In) =>
  axios.request<any>({
    url: `/api/Product/DeleteProduct`,
    method: "post",
    params: {},
    data: params
  });

/** 添加产品信息。保存草稿：添加产品信息，状态为草稿。新建：添加产品信息，状态为启用。 */
export const addProductByPost = (params: AddProduct_In) =>
  axios.request<any>({
    url: `/api/Product/AddProduct`,
    method: "post",
    params: {},
    data: params
  });

/** 修改产品信息。保存草稿：修改产品信息，状态为草稿。新建：修改产品信息，状态为启用。
表名:Crm_Product 产品表。表名:Crm_Product_Price 产品价格表。表名:Crm_Product_Combination 产品组合表。
（修改应不改变产品状态，所以应该只有一个提交按钮。）只可在产品状态为草稿、停用时修改产品信息。 */
export const updateProductByPost = (params: UpdateProduct_In) =>
  axios.request<any>({
    url: `/api/Product/UpdateProduct`,
    method: "post",
    params: {},
    data: params
  });

/** 根据ProductType获取计费参数详情 */
export const getProductChargingParametersByProductTypeByPost = (params: { ProductType?: number }) =>
  axios.request<GetProductChargingParameters_Out>({
    url: `/api/Product/GetProductChargingParametersByProductType`,
    method: "post",
    params: params,
    data: {}
  });

/** 获取产品列表用于下拉菜单，无筛选条件 */
export const getProductNameListNoConditionByPost = () =>
  axios.request<GetProductNameListNoCondition[]>({
    url: `/api/Product/GetProductNameListNoCondition`,
    method: "post",
    params: {},
    data: {}
  });

/** 返回推荐产品剩余数量，最大为3 */
export const getIsRecommendCountByGet = () =>
  axios.request<number>({
    url: `/api/Product/GetIsRecommendCount`,
    method: "get",
    params: {},
    data: {}
  });

export const testObjectByPost = () =>
  axios.request<GetProductById_Out>({
    url: `/api/Product/TestObject`,
    method: "post",
    params: {},
    data: {}
  });

/** 生成当前controller所有TypeScript模型 */
export const generateThisControllerModelToTsByPut = () =>
  axios.request<Stream>({
    url: `/api/Product/GenerateThisControllerModelToTs`,
    method: "put",
    params: {},
    data: {}
  });
